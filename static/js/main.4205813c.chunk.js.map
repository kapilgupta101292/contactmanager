{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","async","delete","name","email","phone","className","onClick","style","cursor","bind","float","color","to","marginRight","Contacts","Fragment","key","Header","branding","href","defaultProps","About","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","prototypes","PropTypes","string","isRequired","func","AddContact","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","EditContact","updContact","match","params","put","Test","title","body","console","log","fetch","then","response","json","nextProps","nextState","App","exact","path","component","NotFound","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4205813c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nconst Context = React.createContext();\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\n\nimport \"./../contact.css\";\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  };\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{\" \"}\n                <i\n                  onClick={() =>\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo\n                    })\n                  }\n                  className=\"fa fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                ></i>\n                <i\n                  className=\"fa fa-times\"\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                ></i>\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fa fa-pencil\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"1rem\"\n                    }}\n                  ></i>\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">{email}</li>\n                  <li className=\"list-group-item\">{phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n      </div>\n      <div>\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to=\"/\" className=\"nav-link\">\n              <i className=\"fa fa-home\"></i>Home\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/contact/add\" className=\"nav-link\">\n              <i className=\"fa fa-plus\"></i>Add\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/about\" className=\"nav-link\">\n              <i className=\"fa fa-question\"></i> About\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"My App\"\n};\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className=\"default-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple App to Manage Contacts</p>\n      <p className=\"secondary\"> Version 1.0.0</p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  name,\n  label,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={value}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"is-invalid form-control form-control-lg\", {\n          \"is-invalid\": error !== \"\"\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\nTextInputGroup.prototypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    //Check For Errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n    //clear state\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-dark btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    //Check For Errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n    //clear state\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-dark btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default EditContact;\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404 Page Not found</span>\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\n\nclass Test extends Component {\n  state = {\n    title: \"\",\n    body: \"\"\n  };\n  componentDidMount() {\n    console.log(\"componentDidMount..\");\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\n      .then(response => response.json())\n      .then(data => this.setState({ title: data.title, body: data.body }));\n  }\n\n  componentWillMount() {\n    console.log(\"component will mount\");\n  }\n\n  componentDidUpdate() {\n    console.log(\"componentDidUpdate...\");\n  }\n\n  componentWillUpdate() {\n    console.log(\"componentWillUpdate...\");\n  }\n\n  componentWillReceiveProps(nextProps, nextState) {\n    console.log(\"componentWillReceiveProps...\" + nextProps + nextState);\n  }\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\nexport default Test;\n","import React from \"react\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\nimport { Provider } from \"./context\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}